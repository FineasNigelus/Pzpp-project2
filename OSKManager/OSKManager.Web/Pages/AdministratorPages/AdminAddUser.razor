@layout AdminLayout
@page "/AdminAddUser"

@using OSKManager.Web.Services
@using OSKManager.Api.Models
@using System.ComponentModel
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@using OSKManager.Web.Services.AdminServices

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="role">Typ użytkownika</label>
        <SelectRoleToRegister OnChangeEvent="OnSelectCityChange"></SelectRoleToRegister>
    </div>
    <div class="form-group">
        <label for="firstName">Imię</label>
        <InputText Id="firstName" class="form-control" @bind-Value="RegisterModel.FirstName" />
        <ValidationMessage For="@(() => RegisterModel.FirstName)" />
    </div>
    <div class="form-group">
        <label for="lastName">Nazwisko</label>
        <InputText Id="lastName" class="form-control" @bind-Value="RegisterModel.LastName" />
        <ValidationMessage For="@(() => RegisterModel.LastName)" />
    </div>
    <div class="form-group">
        <label for="email">Email adres</label>
        <InputText Id="email" class="form-control" @bind-Value="RegisterModel.Email" />
        <ValidationMessage For="@(() => RegisterModel.Email)" />
    </div>
    <div class="form-group">
        <label for="password">Hasło</label>
        <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.Password" />
        <ValidationMessage For="@(() => RegisterModel.Password)" />
    </div>
    <div class="form-group">
        <label for="password">Potwierdź hasło</label>
        <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.ConfirmPassword" />
        <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" />
    </div>

    @*@if (SelectedRole == "Instructor")
            {
        <div class="form-group">
            <label for="password">Wybierz kategorię</label>

            <label for="katA"> Kategoria A</label><br>
            <input type="checkbox" name="katA" value="A">
            <input type="checkbox" name="vehicle2" value="Car">
            <label for="vehicle2"> I have a car</label><br>
            <input type="checkbox" name="vehicle3" value="Boat" checked>
            <label for="vehicle3"> I have a boat</label><br><br>
            <input type="submit" value="Submit">

            <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" />
        </div>
            }*@

    <button type="submit" class="form-control col-6 btn btn-primary">Dodaj</button>
</EditForm>
<div>@SelectedRole</div>
@code {

    private RegisterModel RegisterModel = new RegisterModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;
    public string SelectedRole { get; set; }

    private async Task HandleRegistration()
    {
        ShowErrors = false;
        RegisterModel.TypeOfRole = SelectedRole;

        var result = await AuthService.Register(RegisterModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo(nameof(AdminPanel));
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }

    private void OnSelectCityChange(ChangeEventArgs changeEventArgs)
    {
        SelectedRole = (string)changeEventArgs.Value;
    }
}